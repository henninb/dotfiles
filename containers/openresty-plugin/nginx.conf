worker_processes  1;
error_log /dev/stdout;
events {
    worker_connections 1024;
}

http {
    include       mime.types;
    #------ mention the lua script path ------#
    lua_package_path "/usr/local/lib/lua/?.lua;;";

    #access_log   /dev/stdout;
    access_log   logs/access.log;
    log_format   '$remote_addr - $remote_user [$time_local]  $status ' '"$request" $body_bytes_sent "$http_referer" '  '"$http_user_agent" "$http_x_forwarded_for"';

    init_worker_by_lua_block {
        local config = require('px.pxconfig')
        require ("px.utils.pxtimer").application(config)
    }
    lua_ssl_trusted_certificate "/etc/ssl/certs/ca-certificates.crt";
    lua_ssl_verify_depth 3;

    #------ Replace 8.8.8.8 with your DNS resolver IP ------#
    resolver 8.8.8.8;

    server {
        listen 443 ssl;
        ssl_certificate /etc/ssl/certs/nginx.crt;
        ssl_certificate_key /etc/ssl/private/nginx.key;
        server_name localhost;

        location / {
            #----- PerimeterX Module Start -----#
            access_by_lua_block {
                local config = require('px.pxconfig')
                require("px.pxnginx").application(config)
            }

            header_filter_by_lua_block {
                require("px.pxnginx").finalize(px_data)
            }
            #----- PerimeterX Module End   -----#
            add_header Cache-Control "private, max-age=0, no-cache";

            root   html;
            index  index.html;

            include  mime.types;

            # to test Upstream status, run a web server on 8081 port and enable proxy_pass:
            # proxy_pass http://127.0.0.1:8081;
        }
    }
}
