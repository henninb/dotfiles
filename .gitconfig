[user]
  email = henninb@msn.com
  name = Brian Henning
[alias]
  co = checkout
  ci = commit
  st = status -sb
  s = status
  p = !sh -c 'git fetch --all && git merge && git add . && git commit -am \"$*\" && git push' --
  # echo = !sh -c 'echo "$0 $1 $2 $3 $4 $5 $6 $7 $8 $9"'
  # echo = !sh -c 'echo "$@"'
  # echo = !sh -c 'echo "$*"'
  br = branch
  hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
  type = cat-file -t
  dump = cat-file -p
  cob = checkout -b
  pom = push origin main
  cm = commit -m
  f = "!git ls-files | grep -i"
  untracked = ls-files . --ignored --exclude-standard --others
  lsi = status --ignored
  a = add -A .
  reauthor = !sh -c 'git rebase --onto $1 --exec \"git commit --amend --author=$2\" $1' --
  unstage = reset HEAD --
  undo = reset --soft HEAD~1
  check-file = "!f() { if [ $# -eq 0 ]; then echo 'Filename missing!'; else tracked=$(git ls-files ${1}); if [[ -z ${tracked} ]]; then echo 'File not tracked'; else echo 'File tracked'; fi; fi;  };  f"
  log-graph = log --graph --first-parent --decorate --abbrev-commit --date=relative --format=format:'%h - (%ar) [%an] %s %d'
  log-graph-all = log --graph --all --decorate --abbrev-commit --date=relative --format=format:'%h - (%ar) [%an] %s %d'
  log-simple = log --oneline --abbrev-commit --date=relative --format=format:'%h - (%ar) [%an] %s %d'
  last = log -1 HEAD
  wip = !sh -c 'git fetch --all && git merge && git add . && git commit -am "wip" && git push'
  ls = log --oneline --decorate
  new = !git init && git symbolic-ref HEAD refs/heads/main
[push]
  default = simple
[diff]
  tool = nvimdiff
[difftool]
  trustExitCode = true
  prompt = false
[merge]
  tool = nvimdiff
  conflictstyle = diff3
[core]
  pager = less
  editor = nvim
[advice]
  detachedHead = false
  addIgnoredFile = false
[color]
  diff = auto
  status = auto
  branch = auto
  interactive = auto
  ui = auto
  pager = true
[grep]
  lineNumber = true
[pull]
  rebase = false
[init]
  defaultBranch = main
[pager]
  log = less
